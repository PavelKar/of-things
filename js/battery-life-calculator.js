"use strict";

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

// Generated by CoffeeScript 2.0.3
(function () {
  // CalcBatteryLife
  var CalcBatteryLife;

  CalcBatteryLife = function () {
    function CalcBatteryLife() {
      _classCallCheck(this, CalcBatteryLife);
    }

    _createClass(CalcBatteryLife, null, [{
      key: "getValues",
      value: function getValues() {
        this.timerunvalue = parseFloat($("#timerun").val().replace(/\,/g, '.'));
        this.timesleepvalue = parseFloat($("#timesleep").val().replace(/\,/g, '.'));
        this.consumpactivevalue = parseFloat($("#consumpactive").val().replace(/\,/g, '.'));
        this.consumpsleepvalue = parseFloat($("#consumpsleep").val().replace(/\,/g, '.'));
        this.powerlipobruvalue = parseFloat($("#powerlipobru").val().replace(/\,/g, '.'));
        this.powerliposafevalue = parseFloat($("#powerliposafe").val().replace(/\,/g, '.'));
        this.unitconsumpsleep = parseFloat($("#unitconsumpsleep").attr('data-unit'));
        return "Values complete";
      }
    }, {
      key: "roundoff",
      value: function roundoff(x) {
        return Math.round(x * 100.0) / 100.0;
      }
    }, {
      key: "calcpowerlipo",
      value: function calcpowerlipo(x, y) {
        return parseFloat(x * (100 - y) / 100);
      }
    }, {
      key: "calcruns",
      value: function calcruns(x, y) {
        return parseFloat(60 / (x + y));
      }
    }, {
      key: "calcrunshour",
      value: function calcrunshour(x, y) {
        return parseFloat(3600 / (x + y));
      }
    }, {
      key: "calcpowerrun",
      value: function calcpowerrun(x, y) {
        return parseFloat(x / (x + y) * 3600);
      }
    }, {
      key: "calcpowersleep",
      value: function calcpowersleep(x, y) {
        return parseFloat(y / (x + y) * 3600);
      }
    }, {
      key: "calcpowerest",
      value: function calcpowerest(a, b, c, d) {
        return parseFloat(a / 3600 * b + c / 3600 * d);
      }
    }, {
      key: "sleepconsump",
      value: function sleepconsump() {
        return parseFloat(this.consumpsleepvalue * this.unitconsumpsleep);
      }
    }, {
      key: "powerlipo",
      value: function powerlipo() {
        return this.calcpowerlipo(this.powerlipobruvalue, this.powerliposafevalue);
      }
    }, {
      key: "runs",
      value: function runs() {
        return this.calcruns(this.timerunvalue, this.timesleepvalue);
      }
    }, {
      key: "runshour",
      value: function runshour() {
        return this.calcrunshour(this.timerunvalue, this.timesleepvalue);
      }
    }, {
      key: "powerrun",
      value: function powerrun() {
        return this.calcpowerrun(this.timerunvalue, this.timesleepvalue);
      }
    }, {
      key: "powersleep",
      value: function powersleep() {
        return this.calcpowersleep(this.timerunvalue, this.timesleepvalue);
      }
    }, {
      key: "powerest",
      value: function powerest() {
        return this.calcpowerest(this.powerrun(), this.consumpactivevalue, this.powersleep(), this.sleepconsump());
      }
    }, {
      key: "runtimehoursest",
      value: function runtimehoursest() {
        return parseInt(this.powerlipo() / this.powerest());
      }
    }, {
      key: "runtimedaysest",
      value: function runtimedaysest() {
        return parseInt(this.runtimehoursest() / 24);
      }
    }, {
      key: "runtimedayshoursest",
      value: function runtimedayshoursest() {
        return parseInt(this.runtimehoursest() % 24);
      }
    }, {
      key: "dothemath",
      value: function dothemath() {
        if ($("#timerun").val() && $("#timesleep").val() && $("#consumpactive").val() && $("#consumpsleep").val() && $("#powerlipobru").val() && $("#powerliposafe").val()) {
          this.getValues();
          // console.log(@getValues())
          $("#solutions").fadeIn();
          if (this.runtimehoursest() > 48) {
            $(".runtimedaysest").html(this.runtimedaysest().toString() + " days and " + this.runtimedayshoursest().toString() + " hours");
          }
          if (this.runtimehoursest() < 24) {
            $(".runtimedaysest").html("less than a day");
          }
          if (this.runtimehoursest() > 24 && this.runtimehoursest() < 48) {
            $(".runtimedaysest").html("between one and two days");
          }
          $(".runtimehoursest").html(this.runtimehoursest().toString() + " hours");
          return $(".powerest").html(this.roundoff(this.powerest()).toString() + " mAh");
        } else {
          return $("#solutions").fadeOut();
        }
      }
    }]);

    return CalcBatteryLife;
  }();

  /* the jQuery Part */
  // enable consumption unit switching
  $("#unitconsumpsleep").click(function () {
    switch (this.getAttribute('data-unit')) {
      case "1.0":
        this.setAttribute('data-unit', "0.001");
        this.innerHTML = "&micro;A";
        console.log(this.getAttribute('data-unit'));
        break;
      case "0.001":
        this.setAttribute('data-unit', "1.0");
        this.innerHTML = "mA";
        console.log(this.getAttribute('data-unit'));
    }
    CalcBatteryLife.dothemath();
  });

  // calculate the results with every user interaction
  $("form").keyup(function () {
    return CalcBatteryLife.dothemath();
  });

  $("form").keydown(function () {
    return CalcBatteryLife.dothemath();
  });

  /* Window instantiation */
  CalcBatteryLife.dothemath();

  // Finish
}).call(undefined);
//# sourceMappingURL=data:application/json;base64,
//# sourceURL=/Users/simonneutert/code/of-things/coffeescript/battery-life-calculator.coffee